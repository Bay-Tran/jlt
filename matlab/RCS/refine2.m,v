head	1.4;
access;
symbols;
locks; strict;
comment	@// @;


1.4
date	2008.03.02.19.54.26;	author jeanluc;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.10.10.36.43;	author jeanluc;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.10.10.28.50;	author jeanluc;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.06.13.14.54;	author jeanluc;	state Exp;
branches;
next	;


desc
@Increase resolution of a 2D graph using FFT.
@


1.4
log
@Renamed fk1 to fk.
@
text
@function fp = refine2(f,N)
%REFINE2   Increase resolution of a 2D graph using FFT.
%   REFINE2(F,N) returns an N by N version of F, inflated
%   by taking the FFT of the data, padding with zeros, then
%   inverting using the IFFT.
%
%   See also REFINE.

% $Id: refine2.m,v 1.3 2005/12/10 10:36:43 jeanluc Exp $

N0 = size(f,1);

if N < N0
  error('No downsampling in refine2')
end

kmin0 = floor(-(N0-1)/2);
kmax0 = floor( (N0-1)/2);
kmin = floor(-(N-1)/2);
kmax = floor( (N-1)/2);
c = -kmin+1;
c0 = -kmin0+1;
k0 = [kmin0:kmax0];

fk0 = fftshift(fft2(f));
fk = zeros(N,N);

fk(c + k0,c + k0) = fk0(c0 + k0,c0 + k0);

fp = (N/N0)^2*ifft2(ifftshift(fk),'symmetric');
@


1.3
log
@Works for N, N0 even.
@
text
@d6 2
d9 1
a9 1
% $Id: refine2.m,v 1.2 2005/12/10 10:28:50 jeanluc Exp $
d12 5
d26 1
a26 1
fk1 = zeros(N,N);
d28 1
a28 1
fk1(c + k0,c + k0) = fk0(c0 + k0,c0 + k0);
d30 1
a30 1
fp = (N/N0)^2*ifft2(ifftshift(fk1),'symmetric');
@


1.2
log
@Rescale by (N/N0)^2.
@
text
@d7 1
a7 1
% $Id: refine2.m,v 1.1 2005/08/06 13:14:54 jeanluc Exp $
d10 7
a16 2
n0 = (N0-1)/2;
n = (N-1)/2;
d21 1
a21 1
fk1(n+1 + [-n0:n0],n+1 + [-n0:n0]) = fk0(n0+1 + [-n0:n0],n0+1 + [-n0:n0]);
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
% $Id$
d18 1
a18 1
fp = ifft2(ifftshift(fk1),'symmetric');
@
